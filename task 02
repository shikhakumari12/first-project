import sys
from PIL import Image
import numpy as np

def swap_pixels(img_array):
    # Swap pixel values between first and last columns
    img_array[:, [0, -1]] = img_array[:, [-1, 0]]
    return img_array

def add_to_pixels(img_array, value=50):
    # Add a value to each pixel (with clipping)
    img_array = np.clip(img_array + value, 0, 255)
    return img_array

def encrypt_image(input_path, output_path, operation='swap', value=50):
    img = Image.open(input_path)
    img_array = np.array(img)

    if operation == 'swap':
        img_array = swap_pixels(img_array)
    elif operation == 'add':
        img_array = add_to_pixels(img_array, value)
    else:
        print("Unsupported operation.")
        return

    encrypted_img = Image.fromarray(img_array.astype('uint8'))
    encrypted_img.save(output_path)
    print(f"Encrypted image saved to {output_path}")

if __name__ == "__main__":
    if len(sys.argv) < 4:
        print("Usage: python encrypt_image.py <input_image> <output_image> <operation> [value]")
        print("Operations: swap, add")
        sys.exit(1)
    input_image = sys.argv[1]
    output_image = sys.argv[2]
    operation = sys.argv[3]
    value = int(sys.argv[4]) if len(sys.argv) > 4 else 50
    encrypt_image(input_image, output_image, operation, value)